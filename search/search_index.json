{"config":{"lang":["ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Main","text":"<p>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0434\u043b\u044f \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0430\u0431\u043e\u0442 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043a\u0438 \u0433\u0440\u0443\u043f\u043f\u044b K33422 \u0414\u0435\u043c\u0448\u0438 \u0415\u0432\u0433\u0435\u043d\u0438\u0438</p>"},{"location":"lab2/forms/","title":"\u0424\u043e\u0440\u043c\u044b","text":"<p>\u041f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c \u043a\u0430\u043a \u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0444\u043e\u0440\u043c\u044b. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0444\u0430\u0439\u043b <code>forms.py</code> \u0432 \u043d\u0430\u0448\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438.</p> \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u041e\u0442\u0437\u044b\u0432 <pre><code>from django import forms\nfrom django.contrib.auth.forms import UserCreationForm\nfrom django.contrib.auth.models import User\n# Create your forms here.\nclass NewUserForm(UserCreationForm):\nemail = forms.EmailField(required=True)\nclass Meta:\nmodel = User\nfields = (\"username\", \"email\", \"password1\", \"password2\")\ndef save(self, commit=True):\nuser = super(NewUserForm, self).save(commit=False)\nif commit:\nuser.save()\nreturn user\n</code></pre> <p>\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043a\u043b\u0430\u0441\u0441, \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u044f \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0443\u044e \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 <code>UserCreationForm</code>. \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u043e\u043b\u0435 \u043f\u043e\u0447\u0442\u044b.</p> <pre><code>from django import forms\nfrom .models import Booking\nclass BookRoomForm(forms.ModelForm):\nclass Meta:\nmodel = Booking\nfields = (\"date_start\", \"date_end\")\ndef __init__(self, *args, **kwargs):\nself.user = kwargs.pop('user', None)\nself.room = kwargs.pop('room', None)\nsuper(BookRoomForm, self).__init__(*args, **kwargs)\ndate_start = forms.DateField(widget=forms.TextInput(attrs={'type': 'date'}))\ndate_end = forms.DateField(widget=forms.TextInput(attrs={'type': 'date'}))\ndef save(self, commit=True):\nbooking = super(BookRoomForm, self).save(commit=False)\nbooking.user = self.user\nbooking.room = self.room\nif commit:\nbooking.save()\nreturn booking\n</code></pre> <p>\u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0412\u043c\u0435\u0441\u0442\u0435 \u0441 \u0440\u0435\u043a\u0432\u0435\u0441\u0442\u043e\u043c \u0432 \u043d\u0435\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u0438 \u043e \u043a\u043e\u043c\u043d\u0430\u0442\u0435,  \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043e\u043d \u0431\u0440\u043e\u043d\u0438\u0440\u0443\u0435\u0442. \u042e\u0437\u0435\u0440\u0443 \u043d\u0443\u0436\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u0432\u0435\u0441\u0442\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0430\u0442\u0435 \u0437\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f \u0438 \u0432\u044b\u0441\u0435\u043b\u0435\u043d\u0438\u044f.</p> <pre><code>from django import forms\nfrom .models import Comment\nclass ReviewForm(forms.ModelForm):\nclass Meta:\nmodel = Comment\nfields = (\"rating\", \"content\")\ndef __init__(self, *args, **kwargs):\nself.user = kwargs.pop('user', None)\nself.room = kwargs.pop('room', None)\nsuper(ReviewForm, self).__init__(*args, **kwargs)\ndef save(self, commit=True):\ncomment = super(ReviewForm, self).save(commit=False)\ncomment.user = self.user\ncomment.room = self.room\ncomment.date = datetime.date.today()\nif commit:\ncomment.save()\nreturn comment\n</code></pre> <p>\u0421\u0430\u043c\u0430\u044f \u0431\u0430\u0437\u043e\u0432\u0430\u044f \u0444\u043e\u0440\u043c\u0430, \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u0438. \u041d\u0430\u043c \u0442\u0440\u0435\u0431\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e 2 \u043f\u043e\u043b\u044f: \u0442\u0435\u043a\u0441\u0442 \u043e\u0442\u0437\u044b\u0432\u0430 \u0438 \u0440\u0435\u0439\u0442\u0438\u043d\u0433.</p>"},{"location":"lab2/models/","title":"\u041c\u043e\u0434\u0435\u043b\u0438","text":"<p>\u041d\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043e\u043f\u0438\u0441\u0430\u0442\u044c \u0411\u0414 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django ORM, \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u0439\u0434\u0451\u043c \u0432 \u0444\u0430\u0439\u043b <code>models.py</code> \u0432 \u043d\u0430\u0448\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0438  \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u0430\u0441\u0441\u043e\u0432, \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u043c\u044b\u0445 \u043e\u0442 <code>django.db.models.Model</code>.</p> \u041e\u0442\u0435\u043b\u044c\u041a\u043e\u043c\u043d\u0430\u0442\u0430\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u041e\u0442\u0437\u044b\u0432 <pre><code>from django.db import models\nclass Hotel(models.Model):\nname = models.CharField(max_length=50)\nowner = models.CharField(max_length=50, null=True, blank=True)\ncountry = models.CharField(max_length=30)\ncity = models.CharField(max_length=30)\naddress = models.CharField(max_length=100)\ndescription = models.CharField(max_length=1000, null=True, blank=True)\nimage = models.ImageField()\ndef __str__(self):\nreturn f'{self.city}'\n</code></pre> <pre><code>from django.db import models\nclass Room(models.Model):\nTYPE_ROOM = (\n(\"PREMIUM\", \"premium\"),\n(\"DELUXE\", \"deluxe\"),\n(\"SUITE\", \"suite\"),\n)\nhotel = models.ForeignKey(Hotel, on_delete=models.CASCADE)\ndescription = models.CharField(max_length=1000)\ntype = models.CharField(max_length=10, choices=TYPE_ROOM)\ncost = models.IntegerField()\nimage = models.ImageField()\nguest = models.ManyToManyField(User, through='Booking')\ndef __str__(self):\nreturn self.type\n</code></pre> <pre><code>from django.contrib.auth.models import User\nfrom django.db import models\nclass Booking(models.Model):\nuser = models.ForeignKey(User, on_delete=models.CASCADE)\nroom = models.ForeignKey(Room, on_delete=models.CASCADE)\ndate_start = models.DateField()\ndate_end = models.DateField()\n</code></pre> <pre><code>from django.contrib.auth.models import User\nfrom django.db import models\nclass Comment(models.Model):\nuser = models.ForeignKey(User, on_delete=models.CASCADE)\nroom = models.ForeignKey(Room, on_delete=models.CASCADE)\ncontent = models.CharField(max_length=1000, null=True, blank=True)\nrating = models.IntegerField()\ndate = models.DateField()\ndef __str__(self):\nreturn f'{self.user} \u043en {self.room}'\n</code></pre> <p>\u041f\u043e\u0441\u043b\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043d\u0443\u0436\u043d\u043e \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438:</p> <pre><code>python manage.py makemigrations\npython manage.py migrate\n</code></pre> <p>\u0410 \u0442\u0430\u043a \u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0443\u043f\u0435\u0440\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:</p> <pre><code>python manage.py createsuperuser\n</code></pre>"},{"location":"lab2/views/","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f","text":"<p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u2014 \u043e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u043b\u043e\u0433\u0438\u043a\u0430 \u043d\u0430\u0448\u0435\u0433\u043e \u0441\u0430\u0439\u0442\u0430. \u0412 \u0444\u0430\u0439\u043b\u0435 <code>views.py</code> \u043f\u0440\u043e\u043f\u0438\u0448\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.</p> \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f, \u0432\u0445\u043e\u0434 \u0438 \u0432\u044b\u0445\u043e\u0434\u0421\u043f\u0438\u0441\u043a\u043e\u0432\u044b\u0435 \u0438 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u041e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u0430 <pre><code>from django.shortcuts import render, redirect\nfrom django.contrib import messages\nfrom django.contrib.auth import authenticate, login, logout\nfrom django.contrib.auth.forms import AuthenticationForm\nfrom .forms import NewUserForm\ndef register_request(request):\nif request.method == \"POST\":\nform = NewUserForm(request.POST)\nif form.is_valid():\nuser = form.save()\nlogin(request, user)\nmessages.success(request, \"Registration successful.\" )\nreturn redirect(\"/\")\nmessages.error(request, \"Unsuccessful registration. Invalid information.\")\nform = NewUserForm()\nreturn render(request=request, template_name=\"register.html\", context={\"register_form\": form})\ndef login_request(request):\nif request.method == \"POST\":\nform = AuthenticationForm(request, data=request.POST)\nif form.is_valid():\nusername = form.cleaned_data.get('username')\npassword = form.cleaned_data.get('password')\nuser = authenticate(username=username, password=password)\nif user is not None:\nlogin(request, user)\nmessages.info(request, f\"You are now logged in as {username}.\")\nreturn redirect(\"/\")\nelse:\nmessages.error(request,\"Invalid username or password.\")\nelse:\nmessages.error(request,\"Invalid username or password.\")\nform = AuthenticationForm()\nreturn render(request=request, template_name=\"login.html\", context={\"login_form\": form})\ndef logout_request(request):\nlogout(request)\nmessages.info(request, \"You have successfully logged out.\")\nreturn redirect(\"/\")\n</code></pre> <pre><code>from django.shortcuts import render, redirect\nfrom hotel_app.models import Hotel, Room\nfrom django.views.generic.list import ListView\nfrom django.views.generic.detail import DetailView\nclass BookingListView(ListView):\nmodel = Booking\nqueryset = model.objects.all()\ndef get_queryset(self):\ntry:\nqueryset = self.queryset.filter(user=self.request.user)\nexcept ValueError:\nqueryset = self.model.objects.none()\nreturn queryset\nclass HotelRetrieveView(DetailView):\nmodel = Hotel\nclass HotelListView(ListView):\nmodel = Hotel\nclass RoomListView(ListView):\nmodel = Room\nqueryset = model.objects.all()\ndef get_queryset(self):\nhotel = self.kwargs['hotel_city']\nif hotel:\ntry:\nqueryset = self.queryset.filter(hotel__city=hotel)\nexcept ValueError:\nqueryset = self.model.objects.none()\nreturn queryset\nreturn self.queryset\n</code></pre> <pre><code>from django.shortcuts import render, redirect\nfrom hotel_app.models import Room, Booking\nfrom .forms import BookRoomForm\ndef booking_view(request, *args, **kwargs):\nmodel = Room\nqueryset = model.objects.all()\nhotel = kwargs['hotel_city']\nqueryset = queryset.filter(hotel__city=hotel)\nroom_type = kwargs['room_type']\nroom = queryset.get(type=room_type)\ncomm_model = Comment\ncomm_queryset = comm_model.objects.all()\ncomments = comm_queryset.filter(room=room)\nprint(room)\nif request.POST:\nform = BookRoomForm(request.POST, user=request.user, room=room)\nif form.is_valid():\nbooking = form.save()\nreturn redirect(\"/booking/\")\nform = BookRoomForm()\nreturn render(request=request, template_name=\"room_detail.html\", context={\"booking_form\": form,\n\"comments\": comments})\n</code></pre> <pre><code>from django.shortcuts import render, redirect\nfrom hotel_app.models import Room, Comment\nfrom .forms import ReviewForm\ndef leave_review(request, *args, **kwargs):\nmodel = Room\nqueryset = model.objects.all()\nhotel = kwargs['hotel_city']\nqueryset = queryset.filter(hotel__city=hotel)\nroom_type = kwargs['room_type']\nroom = queryset.get(type=room_type)\nif request.POST:\nform = ReviewForm(request.POST, user=request.user, room=room)\nif form.is_valid():\ncomment = form.save()\nreturn redirect(\"/booking/\")\nform = ReviewForm()\nreturn render(request=request, template_name=\"review.html\", context={\"review_form\": form})\n</code></pre>"}]}